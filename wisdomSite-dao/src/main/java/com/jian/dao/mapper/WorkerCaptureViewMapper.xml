<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jian.dao.WorkerCaptureViewMapper">
  <resultMap id="BaseResultMap" type="com.jian.entity.WorkerCaptureView">
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="capture_time" jdbcType="TIMESTAMP" property="captureTime" />
    <result column="capture_photo" jdbcType="VARCHAR" property="capturePhoto" />
    <result column="match_score" jdbcType="INTEGER" property="matchScore" />
    <result column="belong_id" jdbcType="VARCHAR" property="belongId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="idissue" jdbcType="VARCHAR" property="idissue" />
    <result column="id_photo" jdbcType="VARCHAR" property="idPhoto" />
    <result column="visible_photo" jdbcType="VARCHAR" property="visiblePhoto" />
    <result column="device_name" jdbcType="VARCHAR" property="deviceName" />
    <result column="device_address" jdbcType="VARCHAR" property="deviceAddress" />
    <result column="upload" jdbcType="INTEGER" property="upload" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="device_seril" jdbcType="VARCHAR" property="deviceSeril" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, capture_time, capture_photo, match_score, belong_id, name, gender, nation, 
    birthday, address, idissue, id_photo, visible_photo, device_name, device_address, 
    upload, id_card, device_seril
  </sql>
  <select id="selectByExample" parameterType="com.jian.entity.WorkerCaptureViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from worker_capture_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jian.entity.WorkerCaptureViewExample">
    delete from worker_capture_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jian.entity.WorkerCaptureView">
    insert into worker_capture_view (uuid, capture_time, capture_photo, 
      match_score, belong_id, name, 
      gender, nation, birthday, 
      address, idissue, id_photo, 
      visible_photo, device_name, device_address, 
      upload, id_card, device_seril
      )
    values (#{uuid,jdbcType=VARCHAR}, #{captureTime,jdbcType=TIMESTAMP}, #{capturePhoto,jdbcType=VARCHAR}, 
      #{matchScore,jdbcType=INTEGER}, #{belongId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{nation,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{idissue,jdbcType=VARCHAR}, #{idPhoto,jdbcType=VARCHAR}, 
      #{visiblePhoto,jdbcType=VARCHAR}, #{deviceName,jdbcType=VARCHAR}, #{deviceAddress,jdbcType=VARCHAR}, 
      #{upload,jdbcType=INTEGER}, #{idCard,jdbcType=VARCHAR}, #{deviceSeril,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jian.entity.WorkerCaptureView">
    insert into worker_capture_view
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="captureTime != null">
        capture_time,
      </if>
      <if test="capturePhoto != null">
        capture_photo,
      </if>
      <if test="matchScore != null">
        match_score,
      </if>
      <if test="belongId != null">
        belong_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="idissue != null">
        idissue,
      </if>
      <if test="idPhoto != null">
        id_photo,
      </if>
      <if test="visiblePhoto != null">
        visible_photo,
      </if>
      <if test="deviceName != null">
        device_name,
      </if>
      <if test="deviceAddress != null">
        device_address,
      </if>
      <if test="upload != null">
        upload,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="deviceSeril != null">
        device_seril,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="captureTime != null">
        #{captureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="capturePhoto != null">
        #{capturePhoto,jdbcType=VARCHAR},
      </if>
      <if test="matchScore != null">
        #{matchScore,jdbcType=INTEGER},
      </if>
      <if test="belongId != null">
        #{belongId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="idissue != null">
        #{idissue,jdbcType=VARCHAR},
      </if>
      <if test="idPhoto != null">
        #{idPhoto,jdbcType=VARCHAR},
      </if>
      <if test="visiblePhoto != null">
        #{visiblePhoto,jdbcType=VARCHAR},
      </if>
      <if test="deviceName != null">
        #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="deviceAddress != null">
        #{deviceAddress,jdbcType=VARCHAR},
      </if>
      <if test="upload != null">
        #{upload,jdbcType=INTEGER},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="deviceSeril != null">
        #{deviceSeril,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jian.entity.WorkerCaptureViewExample" resultType="java.lang.Long">
    select count(*) from worker_capture_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update worker_capture_view
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.captureTime != null">
        capture_time = #{record.captureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.capturePhoto != null">
        capture_photo = #{record.capturePhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.matchScore != null">
        match_score = #{record.matchScore,jdbcType=INTEGER},
      </if>
      <if test="record.belongId != null">
        belong_id = #{record.belongId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.idissue != null">
        idissue = #{record.idissue,jdbcType=VARCHAR},
      </if>
      <if test="record.idPhoto != null">
        id_photo = #{record.idPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.visiblePhoto != null">
        visible_photo = #{record.visiblePhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceName != null">
        device_name = #{record.deviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceAddress != null">
        device_address = #{record.deviceAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.upload != null">
        upload = #{record.upload,jdbcType=INTEGER},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceSeril != null">
        device_seril = #{record.deviceSeril,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update worker_capture_view
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      capture_time = #{record.captureTime,jdbcType=TIMESTAMP},
      capture_photo = #{record.capturePhoto,jdbcType=VARCHAR},
      match_score = #{record.matchScore,jdbcType=INTEGER},
      belong_id = #{record.belongId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      nation = #{record.nation,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      idissue = #{record.idissue,jdbcType=VARCHAR},
      id_photo = #{record.idPhoto,jdbcType=VARCHAR},
      visible_photo = #{record.visiblePhoto,jdbcType=VARCHAR},
      device_name = #{record.deviceName,jdbcType=VARCHAR},
      device_address = #{record.deviceAddress,jdbcType=VARCHAR},
      upload = #{record.upload,jdbcType=INTEGER},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      device_seril = #{record.deviceSeril,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.jian.entity.WorkerCaptureViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from worker_capture_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>